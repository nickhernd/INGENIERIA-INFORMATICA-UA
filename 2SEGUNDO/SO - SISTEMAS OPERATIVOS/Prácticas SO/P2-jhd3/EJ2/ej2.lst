BACI System: C-- to PCODE Compiler, 10/03/2010
Source file: C:\Users\ramaj\OneDrive\Escritorio\ej2.cm  Mon Nov 13 17:10:36 2023
 line  pc
   1    0  
   2    0  semaphore accesoBuffer=1, buffer=3, consumer=0;
   3    0  
   4    0  const int bufferSize = 3;
   5    0  const int shape = 1;
   6    0  const int color = 2;
   7    0  int objeto = 0;
   8    0  
   9    0  void draw(){
  10    0  
  11    0    
  12    0    int x = 100, y = 300;
  13    6    
  14    6    
  15    6    for(objeto; objeto < bufferSize; objeto++){
  16   17  
  17   17  	create(objeto, shape, color, x, y, 45, 45);
  18   25  
  19   25      
  20   25  	makevisible(objeto, 1);
  21   28  	
  22   28  	y = y - 100;
  23   33    }
  24   34    objeto = 0;
  25   37  
  26   37    create(100, 3, 5, x-40 , y-100, 45, 45);
  27   49    makevisible(100, 1);
  28   52  
  29   52    create(300, 3, 5, x-40 , y+100, 45, 45);
  30   64    makevisible(300, 1);
  31   67  
  32   67  }
  33   68  
  34   68  
  35   68  void add(){
  36   68     
  37   68     cout<<"Soy el productor y voy a agregar al buffer."<<endl;
  38   70  
  39   70     
  40   70     changecolor(objeto, 5);
  41   73     objeto++;   
  42   78     
  43   78  }
  44   79  
  45   79  void take(){
  46   79  
  47   79     cout<<"Soy el consumidor y voy a coger del buffer"<<endl;
  48   81     objeto--;
  49   86  
  50   86     //Imprimimos el objeto en la interfaz grÃ¡fica como consumido
  51   86     changecolor(objeto, 1);
  52   89  
  53   89  }
  54   90  
  55   90  //=============[CABECERAS]================
  56   90  void producir(){}
  57   91  
  58   91  void consumir(){}
  59   92  
  60   92  //=============[PRODUCTOR]================
  61   92  void productor(){ 
  62   92  
  63   92      for(;;){
  64   93        producir();
  65   96  
  66   96        //Esperamos a que se agrege al buffer
  67   96        changecolor(100, 1);
  68   99        wait(buffer); 
  69  101        changecolor(100, 5);
  70  104  
  71  104        wait(accesoBuffer);
  72  106        add();
  73  109  
  74  109        //Esperamos a que se decremente el buffer
  75  109        signal(accesoBuffer);
  76  111        //Desbloqueamos al consumidor
  77  111        signal(consumer); 
  78  113      }
  79  114  }
  80  115  
  81  115  //=============[CONSUMIDOR]=================
  82  115  void consumidor(){
  83  115  
  84  115      for(;;){
  85  116        changecolor(300, 1);
  86  119        wait(consumer); //Esperamos hasta que el productor acabe
  87  121        changecolor(300, 5);
  88  124  	
  89  124        wait(accesoBuffer); //Exclusion mutua
  90  126        take();
  91  129        signal(accesoBuffer);
  92  131        signal(buffer);
  93  133        consumir();
  94  136      }
  95  137  }
  96  138  
  97  138  //=================[MAIN]===================
  98  138  void main(){
  99  139  
 100  139     //initialsem(buffer, bufferSize);
 101  139     //initialsem(accesoBuffer, 1); //Maximo 1 proceso accede
 102  139     //initialsem(consumer, 0); //Para que el consumidor se bloquee hasta que el productor le desbloquee
 103  139     draw();
 104  142  
 105  142     cobegin
 106  143     {
 107  143        productor();
 108  146        consumidor();
 109  149     }
 110  150  }
